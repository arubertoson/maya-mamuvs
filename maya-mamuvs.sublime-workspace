{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"op",
				"operator	module"
			],
			[
				"if",
				"ifmain	if __name__ == '__main__'"
			],
			[
				"dg",
				"dgnodes	module"
			],
			[
				"Mesh",
				"MeshVert	class"
			],
			[
				"get_",
				"get_component"
			],
			[
				"order",
				"ordered_selection"
			],
			[
				"kwar",
				"kwargs_parameters	statement"
			],
			[
				"func",
				"functools	module"
			],
			[
				"fun",
				"functools	module"
			],
			[
				"base",
				"base_tools	statement"
			],
			[
				"press",
				"press_command"
			],
			[
				"Key",
				"KeyPress	instance"
			],
			[
				"Mo",
				"MouseButtonRelease	instance"
			],
			[
				"Mouse",
				"MouseButtonPress	instance"
			],
			[
				"pre",
				"press_command"
			],
			[
				"release",
				"release_command"
			],
			[
				"basi",
				"basicConfig	function"
			],
			[
				"contex",
				"context_string	statement"
			],
			[
				"conte",
				"context_string	statement"
			],
			[
				"maya",
				"maya_context	statement"
			],
			[
				"def",
				"default_context"
			],
			[
				"aci",
				"active	statement"
			],
			[
				"re",
				"replace_hotkeys	function"
			],
			[
				"HOtk",
				"HotkeyManager	class"
			],
			[
				"ac",
				"activate	function"
			],
			[
				"Mou",
				"MouseEventEater	class"
			],
			[
				"MOuse",
				"MouseButtonPress	instance"
			],
			[
				"modi",
				"modifier"
			],
			[
				"tran",
				"translate"
			],
			[
				"tra",
				"translate"
			],
			[
				"Key_ex",
				"Key_Exclam	instance"
			],
			[
				"Key_Exc",
				"Key_Exclam	instance"
			],
			[
				"Key_b",
				"Key_B	instance"
			],
			[
				"Q",
				"QApplication	class"
			],
			[
				"se",
				"sequence	statement"
			],
			[
				"QKey",
				"QKeySequence	class"
			],
			[
				"Cu",
				"CURRENT_HOTKEY_NAME"
			],
			[
				"rest",
				"reset_walker"
			],
			[
				"handl",
				"handle_event"
			],
			[
				"activa",
				"active_map"
			],
			[
				"spl",
				"splitext	function"
			],
			[
				"curre",
				"current_level"
			],
			[
				"currn",
				"current_level"
			],
			[
				"wa",
				"walk_context	function"
			],
			[
				"_config",
				"_config_paths	globalstmt"
			],
			[
				"Hotkey",
				"HotkeyWalker	class"
			],
			[
				"reset",
				"reset_walker"
			],
			[
				"Hotk",
				"HotkeyManager	class"
			],
			[
				"mam",
				"mamqkeys	module"
			],
			[
				"quick",
				"quickkeys_mouse_interactables"
			],
			[
				"mo",
				"modifiers	function"
			],
			[
				"_bu",
				"_button_keycode	statement"
			],
			[
				"assert",
				"assertFalse	function"
			],
			[
				"bu",
				"button	function"
			],
			[
				"button",
				"button_keycode	function"
			],
			[
				"fil",
				"file_	param"
			],
			[
				"dic",
				"dictize	statement"
			],
			[
				"iter",
				"itertools	module"
			],
			[
				"a",
				"active	statement"
			],
			[
				"Ho",
				"Hotkey	function"
			],
			[
				"act",
				"active"
			],
			[
				"acti",
				"active"
			],
			[
				"try",
				"try	Try/Except"
			],
			[
				"handle_",
				"handle_sequence"
			],
			[
				"QEven",
				"QEvent	class"
			],
			[
				"debug",
				"DEBUG	statement"
			],
			[
				"sub",
				"__subclasses__	function"
			],
			[
				"getM",
				"getM3dViewFromModelPanel	function"
			],
			[
				"QApp",
				"QApplication	class"
			],
			[
				"mouse",
				"MouseButtonPress	instance"
			],
			[
				"right",
				"RightButton	instance"
			],
			[
				"Left",
				"LeftButton	instance"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "import math\nimport logging\nimport operator\n\nimport maya.cmds as cmds\nimport maya.api.OpenMaya as api\n\nimport mampy\nfrom mampy.selections import SelectionList\nfrom mampy.components import MeshPolygon, MeshMap\nfrom mampy.utils import undoable, repeatable, grouped\nfrom mampy.datatypes import BoundingBox, Line2D\n\nlogger = logging.getLogger(__name__)\nlogger.setLevel(logging.DEBUG)\n\n\nclass UV3DArea(object):\n\n    def __init__(self, comp):\n\n        if not comp:\n            faces = MeshPolygon(comp.dagpath).get_complete()\n        else:\n            faces = comp.to_face()\n\n        self.comp = faces\n        self.uv = 0.0\n        self.surface = 0.0\n\n        self.mesh = comp.mesh\n        self.points = self.mesh.getPoints(space=api.MSpace.kWorld)\n        self.internal_distance = api.MDistance.internalToUI\n        self.get_polygon_uv = self.mesh.getPolygonUV\n        self.get_polygon_vert = self.mesh.getPolygonVertices\n\n        self.update()\n\n    @property\n    def ratio(self):\n        return math.sqrt(self.surface / self.uv)\n\n    def _get_uv_area(self, idx):\n        \"\"\"\n        Return uv area of given face index.\n        \"\"\"\n        verts = self.get_polygon_vert(idx)\n        vert_len = len(verts) - 1\n\n        au, av = self.get_polygon_uv(idx, 0)\n        for i in xrange(1, vert_len):\n            if i + 1 > vert_len:\n                break\n            bu, bv = self.get_polygon_uv(idx, i)\n            cu, cv = self.get_polygon_uv(idx, i + 1)\n            s = (bu - au) * (cv - av)\n            t = (cu - au) * (bv - av)\n            self.uv += abs((s - t) * 0.5)\n\n    def _get_surface_area(self, idx):\n        \"\"\"\n        Return surface area of given face index.\n        \"\"\"\n        verts = self.get_polygon_vert(idx)\n        vert_len = len(verts) - 1\n\n        a = self.points[verts[0]]\n        for i in xrange(1, vert_len):\n            if i + 1 > vert_len:\n                break\n            b = self.points[verts[i]]\n            c = self.points[verts[i + 1]]\n\n            la = a.distanceTo(b)\n            lb = a.distanceTo(c)\n            lc = b.distanceTo(c)\n\n            # convert to internal distance\n            la = self.internal_distance(la)\n            lb = self.internal_distance(lb)\n            lc = self.internal_distance(lc)\n\n            s = (la + lb + lc) * 0.5\n            self.surface += math.sqrt(s * (s - la) * (s - lb) * (s - lc))\n\n    def update(self):\n        self.uv = 0.0\n        self.surface = 0.0\n        for idx in self.comp.indices:\n            self._get_uv_area(idx)\n            self._get_surface_area(idx)\n\n\ndef get_areas():\n    s = mampy.selected()\n    if not s:\n        logger.warn('Nothing selected.')\n\n    return [UV3DArea(c) for c in s.itercomps()]\n\n\ndef get_average_texel_density(areas, texture_size):\n    return (sum([a.ratio for a in areas]) / len(areas)) * texture_size\n\n\ndef get_texel_density(areas=None, texture_size=1024):\n    return sum([a.ratio for a in areas or get_areas()]) * texture_size\n\n\ndef set_texel_density(shell=True, target_density=0, texture_size=1024):\n    if shell:\n        areas = [UV3DArea(c) for c in get_shells()]\n    else:\n        selected = mampy.selected()\n        components = SelectionList()\n        components.extend([c.get_complete() for c in selected.itercomps()])\n        areas = [UV3DArea(c) for c in get_shells(components)]\n\n    if target_density == 0:\n        target_density = get_average_texel_density(areas, texture_size)\n\n    print areas\n    for area in areas:\n        scale_value = (area.ratio * texture_size) / target_density\n        print scale_value\n\n        uvs = area.comp.to_map()\n        print uvs\n        point = uvs.bounding_box.center\n        uvs.translate(su=scale_value, sv=scale_value, pu=point.u, pv=point.v)\n\n\n\n\n\n\nif __name__ == '__main__':\n    set_texel_density(shell=False)\n",
			"file": "mamuvs/uv.py",
			"file_size": 12801,
			"file_write_time": 131127181042190863,
			"settings":
			{
				"buffer_size": 3765,
				"line_ending": "Windows"
			}
		},
		{
			"file": "mamuvs/align.py",
			"settings":
			{
				"buffer_size": 6298,
				"line_ending": "Windows"
			}
		},
		{
			"file": "mamuvs/utils.py",
			"settings":
			{
				"buffer_size": 2870,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 467.0,
		"last_filter": "check",
		"selected_items":
		[
			[
				"check",
				"Git: Checkout"
			],
			[
				"stat",
				"Git: Status"
			],
			[
				"mer",
				"Git: Merge"
			],
			[
				"sta",
				"Git: Status"
			],
			[
				":w",
				":w - Save"
			],
			[
				"status",
				"Git: Status"
			],
			[
				"rename",
				"ANF: Rename File"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				":edit",
				"Project: Edit"
			],
			[
				":lin",
				"Anaconda: Disable linting on this file"
			],
			[
				":json",
				"Set Syntax: JSON"
			],
			[
				":git st",
				"Set Syntax: SublimeGit Status"
			],
			[
				":test",
				"Anaconda: Run Current Test"
			],
			[
				":default",
				"Preferences: Key Bindings - Default"
			],
			[
				":install",
				"Package Control: Install Package"
			],
			[
				":lint",
				"Anaconda: Disable linting on this file"
			],
			[
				":defau",
				"Preferences: Key Bindings - Default"
			],
			[
				"Unit",
				"UnitTesting: Quick Run"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"edit",
				"Project: Edit"
			],
			[
				":tes",
				"Anaconda: Run Project Tests"
			],
			[
				":te",
				"Anaconda: Run Project Tests"
			],
			[
				"test",
				"Anaconda: Run Current Test"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				":remove",
				"Package Control: Remove Channel"
			],
			[
				"find us",
				"Anaconda: Find object usage"
			],
			[
				":usag",
				"Anaconda: Find object usage"
			],
			[
				"synta",
				"Set Syntax: JSON"
			],
			[
				"goto",
				"Anaconda: Goto object definition"
			],
			[
				"synta j",
				"Set Syntax: JSON"
			],
			[
				":linting",
				"Anaconda: Disable linting on this file"
			],
			[
				":curren",
				"Anaconda: Run Current Test"
			],
			[
				":curret",
				"Anaconda: Run Current Test"
			],
			[
				"Curren",
				"Anaconda: Run Current Test"
			],
			[
				":current",
				"Anaconda: Run Current Test"
			],
			[
				":ru",
				"Anaconda: Run Current Test"
			],
			[
				":las",
				"Anaconda: Run Last Test"
			],
			[
				":last",
				"Anaconda: Run Last Test"
			],
			[
				":run",
				"Anaconda: Run Current Test"
			],
			[
				"user ",
				"Preferences: Settings - User"
			],
			[
				"default",
				"Preferences: Key Bindings - Default"
			],
			[
				"user",
				"Preferences: Settings - User"
			],
			[
				"lint",
				"Anaconda: Disable linting on this file"
			],
			[
				":install ",
				"Package Control: Install Package"
			],
			[
				"anaconda test",
				"Anaconda: Run Current Test"
			],
			[
				"syntax json",
				"Set Syntax: JSON"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"remove pack",
				"Package Control: Remove Package"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"setings",
				"Preferences: Settings - Default"
			],
			[
				"word",
				"Word Wrap: Toggle"
			],
			[
				"editr",
				"Project: Edit Project"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"packag in",
				"Package Control: Install Package"
			],
			[
				"con",
				"Indentation: Convert to Spaces"
			],
			[
				"settings",
				"Preferences: Settings - Default"
			],
			[
				"sytnax js",
				"Set Syntax: JSON"
			],
			[
				"markdown p",
				"Markdown Preview: Preview in Browser"
			],
			[
				"markdown",
				"Markdown Preview: Open Markdown Cheat sheet"
			],
			[
				"conver",
				"Indentation: Convert to Spaces"
			]
		],
		"width": 597.0
	},
	"console":
	{
		"height": 367.0,
		"history":
		[
			"sublime.log_commands(True)",
			"sublime.command_log(True)"
		]
	},
	"distraction_free":
	{
		"menu_visible": false,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/G/dev/maya/maya-mamuvs/mamuvs"
	],
	"file_history":
	[
		"/G/dev/maya/maya-mamuvs/mamuvs/maya-mamuvs.sublime-project",
		"/G/dev/maya/maya-mamuvs/mamuvs/__init__.py",
		"/G/dev/maya/maya-mamuvs/mamuvs/texel_density.",
		"/G/dev/maya/maya-mampy/mampy/dgcomps.py",
		"/G/dev/maya/maya-mampy/mampy/datatypes.py",
		"/G/dev/maya/maya-mampy/mampy/utils.py",
		"/G/dev/maya/maya-mampy/mampy/dgcontainers.py",
		"/G/dev/maya/maya-mampy/mampy/computils.py",
		"/G/dev/maya/maya-mampy/mampy/api.py",
		"/G/Macke/Dropbox/dev/maya/__example_code/__mrv/python/mrv/dge.py",
		"/G/dev/maya/maya-mampy/mampy/dglists.py",
		"/G/Macke/Dropbox/dev/maya/__example_code/__mrv/python/mrv/util.py",
		"/G/dev/maya/maya-mampy/mampy/selections.py",
		"/G/dev/maya/maya-mampy/mampy/components.py",
		"/G/Macke/Dropbox/dev/maya/__example_code/__mrv/README.rst",
		"/G/Macke/Dropbox/dev/maya/__example_code/Red9/installer/userSetup.py",
		"/G/dev/maya/maya-launcher/mayalauncher.py",
		"/G/dev/maya/__mrv/python/mrv/maya/__init__.py",
		"/G/Macke/Dropbox/dev/maya/myaru/qhelpers/aqtwidgets.py",
		"/G/Macke/Dropbox/dev/maya/myaru/qhelpers/aqtmodels.py",
		"/G/dev/maya/maya-mampy/mampy/__init__.py",
		"/G/dev/maya/maya-mampy/mampy/nodes.py",
		"/G/dev/maya/__mrv/python/mrv/__init__.py",
		"/G/dev/maya/__mrv/python/mrv/maya/all.py",
		"/G/dev/maya/__mrv/python/mrv/maya/env.py",
		"/G/dev/maya/maya-quickrenamer/quickrenamer/__init__.py",
		"/G/dev/maya/maya-quickrenamer/quickrenamer/renamer.py",
		"/G/Macke/Dropbox/apps/cmder/config/aliases",
		"/G/Macke/Dropbox/apps/cmder/vendor/git-for-windows/mingw32/etc/gitconfig",
		"/C/Users/Macke/.gitconfig",
		"/C/Users/Macke/.vimrc",
		"/G/Macke/Dropbox/apps/cmder/config/settings",
		"/G/Macke/Dropbox/apps/cmder/vendor/aliases.example",
		"/G/dev/maya/maya-mampy/mampy/selectionlist.py",
		"/G/dev/maya/maya-mampy/mampy/slist.py",
		"/G/dev/maya/maya-mampy/test_mampy.py",
		"/G/dev/maya/maya-mampy/mampy/comp.py",
		"/G/dev/maya/maya-mampy/mampy/nodes",
		"/G/dev/maya/maya-mampy/mampy/node.py",
		"/G/dev/maya/maya-mampy/mampy/exceptions.py",
		"/G/dev/maya/maya-mampy/.gitmodules",
		"/G/dev/maya/maya-mampy/.git/config",
		"/G/dev/maya/maya-mampy/mampy/packages/mvp.py",
		"/G/dev/maya/maya-mampy/mampy/packages/README.rst",
		"/G/dev/maya/maya-mampy/mampy/packages/profilehooks.py",
		"/G/dev/maya/maya-mampy/mampy/packages/pathlib2",
		"/G/dev/maya/maya-mampy/mampy/packages/__init__.py",
		"/G/dev/maya/userSetup.py",
		"/G/Macke/Dropbox/appsettings/sublime/Packages/SublimeToMaya/socket_wrap.py",
		"/G/Macke/Dropbox/appsettings/sublime/Packages/SublimeToMaya/sublimetomaya.py",
		"/G/dev/maya/maya-mampy/maya-mampy.sublime-project",
		"/C/Program Files/Autodesk/Maya2015/Python/Lib/site-packages/maya/app/general/CommandPort.py",
		"/C/Users/Macke/AppData/Roaming/mayalauncher/.config",
		"/G/dev/maya/maya-mamtools/mamtools/__init__.py",
		"/G/dev/maya/maya-mamtools/mamtools/select.py",
		"/G/dev/maya/maya-mamtools/mamtools/api.py",
		"/G/dev/maya/maya-mamtools/mamtools/utils.py",
		"/C/Python27/Lib/site-packages/tornado/platform/select.py",
		"/G/Macke/Dropbox/appsettings/sublime/Packages/SublimeToMaya/SublimeToMaya.sublime-settings",
		"/G/Macke/Dropbox/appsettings/maya/scripts/userSetup.py",
		"/C/Users/Macke/AppData/Roaming/Sublime Text 3/Packages/SublimeToMaya/Default (Windows).sublime-keymap",
		"/C/Users/Macke/AppData/Roaming/Sublime Text 3/Packages/SublimeToMaya/Default.sublime-commands",
		"/C/Python27/Lib/glob.py",
		"/G/dev/maya/maya-mamqtkeys/.gitignore",
		"/G/dev/maya/maya-mamqtkeys/mamqtkeys/manager.py",
		"/G/dev/maya/maya-mamqkeys/prefs/model.hotkey",
		"/G/dev/maya/__backups/__init__.py",
		"/G/Macke/Dropbox/appsettings/sublime/Packages/Vintage/Default (Windows).sublime-keymap",
		"/G/dev/maya/__backups/quickkeys_mouse_interactables.py",
		"/G/dev/maya/maya-mamqkeys/tests/test_sequence.py",
		"/G/dev/maya/__backups/quickkeys.py",
		"/G/dev/maya/maya-mamqkeys/tests/test_walker.py",
		"/G/wait.py",
		"/G/wait2.py",
		"/G/dev/maya/maya-mamqkeys/mamqkeys/__init__.py",
		"/G/dev/maya/maya-mamqkeys/tests/test_eventfilter.py",
		"/C/Users/Macke/AppData/Roaming/Sublime Text 3/Packages/Default/Default (Windows).sublime-keymap",
		"/G/Macke/Dropbox/appsettings/sublime/Packages/Vintage/Default.sublime-keymap",
		"/G/Macke/Dropbox/appsettings/sublime/Packages/Vintage/vintage.py",
		"/G/dev/maya/maya-mamqkeys/mamqkeys/walker.py",
		"/G/dev/maya/maya-mamqkeys/.travis.yml",
		"/G/dev/maya/maya-mamqkeys/mamqkeys/tests/test_sequence.py",
		"/G/dev/maya/maya-mamqkeys/tests/test_quickkeys.py",
		"/G/dev/maya/maya-mamqkeys/mamqkeys/quickkeys.py",
		"/G/Macke/Dropbox/appsettings/sublime/Packages/User/Default (Windows).sublime-keymap",
		"/G/Macke/Dropbox/appsettings/sublime/Packages/User/hotkey_snips.sublime-snippet",
		"/C/Python34/Lib/abc.py",
		"/C/Python34/Lib/ast.py",
		"/G/dev/maya/maya-mamqkeys/sequence.py",
		"/G/dev/maya/maya-mamqkeys/quickkeys.sublime-project",
		"/G/Macke/Dropbox/appsettings/sublime/Packages/User/Anaconda.sublime-settings",
		"/G/dev/maya/maya-mamqkeys/mamqkeys/.quickkeys",
		"/G/dev/maya/maya-mamprefs/mamprefs/hotkeys.py",
		"/G/dev/maya/maya-quickkeys/mamqkeys/quickkeys_mouse_interactables.py",
		"/G/dev/maya/maya-quickkeys/.quickkeys",
		"/G/dev/maya/maya-quickkeys/quickkeys.py",
		"/G/dev/maya/maya-quickkeys/__init__.py",
		"/G/dev/maya/maya-mamprefs/mamprefs/.mamprefs",
		"/C/Users/Macke/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/Macke/AppData/Roaming/Sublime Text 3/Packages/Vintage/Default (Windows).sublime-keymap",
		"/C/Users/Macke/AppData/Roaming/Sublime Text 3/Packages/Vintage/Default.sublime-keymap",
		"/C/Users/Macke/AppData/Roaming/Sublime Text 3/Packages/Vintage/vintage.py",
		"/G/Macke/Dropbox/appsettings/sublime/Packages/User/Preferences.sublime-settings.BAK",
		"/C/Users/Macke/AppData/Roaming/Sublime Text 3/Packages/Vintage/vintage_motions.py",
		"/G/Macke/Dropbox/appsettings/sublime/Packages/User/Package Control.sublime-settings.BAK",
		"/G/dev/maya/maya-quickkeys/test_quickkeys.py",
		"/G/dev/maya/maya-quickkeys/quickkeys.sublime-project",
		"/G/Macke/Dropbox/appsettings/sublime/Packages/Vintage/Preferences.sublime-settings",
		"/G/Macke/Dropbox/appsettings/sublime/Packages/Vintage/Preferences (OSX).sublime-settings",
		"/G/Hi Wolf,",
		"/G/snippets",
		"/G/config",
		"/G/widgfe tree",
		"/G/Macke/Dropbox/dev/modo/mdaru/cfg/hotkeys.cfg",
		"/G/dev/maya/maya-mamtools/mamtools/testy.py",
		"/C/Program Files/Autodesk/Maya2015/include/maya/MQtUtil.h",
		"/G/Macke/Downloads/rjCMDSearch.py",
		"/G/Macke/Downloads/StyleMaya.py",
		"/C/Users/Macke/AppData/Roaming/Sublime Text 3/Packages/User/Projects/maya-mamtools.sublime-project",
		"/C/Users/Macke/AppData/Roaming/Sublime Text 3/Packages/DistractionFreeWindow/distraction_free_window.sublime-settings",
		"/C/Users/Macke/AppData/Roaming/Sublime Text 3/Packages/User/distraction_free_window.sublime-settings",
		"/G/dev/maya/maya-mamprefs/prefs/modonaut.color",
		"/G/Macke/Dropbox/appsettings/sublime/Packages/User/Distraction Free.sublime-settings",
		"/G/dev/maya/maya-mamprefs/README.md",
		"/C/Users/Macke/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/G/dev/maya/maya-mamprefs/.gitignore"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 115.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"comp",
			";",
			"\\;%",
			"cmds",
			"Logger = logging.getLogger(__name__)\nlogger.setLevel(logging.DEBUG)\n\n\ntest_ma_file = os.path.join(os.path.dirname(os.path.abspath(__file__)),\n                            'test_mampy.ma')\n\n\nclass TestSelectionList(unittest.TestCase):\n\n    def setUp(self):\n",
			"repeatable",
			"wrap",
			"convert",
			"dR_DoCmd(\"selectRelease",
			"mamqkeys",
			"logging",
			"  ",
			"logging",
			"logger",
			"context",
			"logger",
			"initialize_settings",
			"tooless",
			"contexts",
			"key_eater",
			"sequence",
			"name",
			"logger",
			"hotkeys",
			"globals",
			"item",
			"QtGui.",
			"bookmark",
			"\"`\"",
			"true",
			"false",
			"true",
			"false",
			"selection",
			"from",
			"viusal",
			"visual",
			"args",
			" \"",
			"\":\"",
			"ControlModifier",
			"modifiers",
			"mods",
			"seq",
			"mevent",
			"mouse_map",
			"mouse_",
			"MOUSE_MAP",
			"seq",
			"mevent",
			"        ",
			"ctrl+j",
			"command",
			"seuence",
			"pass",
			"QtCore",
			"()",
			"Program",
			":\\",
			"self",
			"get_nice_name",
			"handle_sequence",
			"timer",
			"current_level",
			"Hotkey",
			"CONFIG_PATHS",
			"HOTKEY_TIMEOUT_MILLISECONDS",
			"activate",
			"import",
			"main_menu",
			"_button",
			"_modifiers",
			"parse_command",
			"_hotkey_manager",
			"hotkey",
			"key_map",
			"\"up\"",
			"up",
			"auto_complete",
			"hotkey_map",
			"hotkey_manager",
			"HotkeyManager",
			"press_command",
			"kwargs",
			"release_command",
			"press_command",
			"visual",
			"release_command",
			"press_command",
			"prev",
			"ctrl+d",
			"HotkeyManger",
			"modelPanel",
			"fold",
			"QtCore",
			"editor",
			"folders",
			"caret",
			"()\n",
			"None",
			"lassoSelectContext",
			"widget",
			"find_nice_name",
			"):\n",
			"name",
			"clean_name",
			"look_for_name",
			"objectName",
			"widget",
			"name",
			"return",
			"clean_name",
			"look_for_name",
			"name",
			"form",
			"widget",
			"omui",
			"|outlinerPanel1",
			"outliner",
			"widget",
			"improt",
			"shiboken",
			"pass",
			"int",
			"LeftButton",
			"pass",
			"keycode",
			"sequence"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"mamqtkeys"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "mamuvs/uv.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3765,
						"regions":
						{
						},
						"selection":
						[
							[
								3698,
								3698
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 272.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "mamuvs/align.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6298,
						"regions":
						{
						},
						"selection":
						[
							[
								430,
								430
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "mamuvs/utils.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2870,
						"regions":
						{
						},
						"selection":
						[
							[
								295,
								295
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										295,
										296
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										282,
										283
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 39.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": false,
	"output.exec":
	{
		"height": 116.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git-checkout":
	{
		"height": 116.0
	},
	"output.git-commit":
	{
		"height": 116.0
	},
	"output.git-merge":
	{
		"height": 116.0
	},
	"pinned_build_system": "Maya Build",
	"project": "maya-mamuvs.sublime-project",
	"replace":
	{
		"height": 466.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"dgco",
				"mampy\\dgcontainers.py"
			],
			[
				"comp",
				"mampy\\computils.py"
			],
			[
				"uti",
				"mampy\\utils.py"
			],
			[
				"selec",
				"mampy\\selections.py"
			],
			[
				"sele",
				"mampy\\selections.py"
			],
			[
				"util",
				"mampy\\utils.py"
			],
			[
				"__",
				"mampy\\__init__.py"
			],
			[
				"",
				"test_mampy.py"
			],
			[
				"node",
				"mampy\\node.py"
			],
			[
				"slist",
				"mampy\\slist.py"
			],
			[
				"s",
				"mampy\\slist.py"
			],
			[
				"test",
				"test_mampy.py"
			],
			[
				"sli",
				"mampy\\slist.py"
			],
			[
				"ap",
				"mampy\\api.py"
			],
			[
				"ut",
				"mamqtkeys\\utils.py"
			],
			[
				"walker",
				"mamqtkeys\\walker.py"
			],
			[
				"se",
				"mamqtkeys\\sequence.py"
			],
			[
				"mana",
				"mamqtkeys\\manager.py"
			],
			[
				"event",
				"mamqtkeys\\events.py"
			],
			[
				"hotkey",
				"prefs\\model.hotkey"
			],
			[
				"seq",
				"mamqtkeys\\sequence.py"
			],
			[
				"even",
				"mamqtkeys\\events.py"
			],
			[
				"ini",
				"mamqkeys\\__init__.py"
			],
			[
				"walk",
				"mamqkeys\\walker.py"
			],
			[
				"i",
				"mamqkeys\\__init__.py"
			],
			[
				"q",
				"tests\\test_quickkeys.py"
			],
			[
				".",
				"mamqkeys\\.quickkeys"
			],
			[
				".qui",
				"mamqkeys\\.quickkeys"
			],
			[
				"qui",
				"quickkeys.py"
			],
			[
				"te",
				"test_quickkeys.py"
			],
			[
				"tes",
				"test_quickkeys.py"
			],
			[
				"qyu",
				"quickkeys.py"
			],
			[
				"color",
				"prefs\\modonaut.color"
			],
			[
				"colo",
				"prefs\\modonaut.color"
			],
			[
				"read",
				"README.md"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 750.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"G:\\dev\\maya\\maya-mamqtkeys\\maya-mamqtkeys.sublime-project"
			],
			[
				"mamtoo",
				"G:\\dev\\maya\\maya-mamtools\\maya-mamtools.sublime-project"
			]
		],
		"width": 570.0
	},
	"select_symbol":
	{
		"height": 144.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"mou",
				"MouseSequence"
			],
			[
				"edit",
				"edit"
			],
			[
				"mouse",
				"create_mouse_event"
			],
			[
				"",
				"Hotkey"
			],
			[
				"hot",
				"Hotkey"
			],
			[
				"Hok",
				"Hotkey"
			],
			[
				"hotk",
				"Hotkey"
			],
			[
				"up",
				"update"
			],
			[
				"hotkey",
				"Hotkey"
			],
			[
				"key",
				"KeySequence"
			],
			[
				"Mous",
				"MouseSequence"
			],
			[
				"out",
				"output"
			],
			[
				"create",
				"create_mouse_event"
			],
			[
				"modi",
				"modifiers"
			]
		],
		"width": 450.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 188.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
